<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kalyan的小书房</title>
  <icon>https://www.gravatar.com/avatar/26add54e467101c6779c59a0ed4ee504</icon>
  <subtitle>Kalyan is working hard</subtitle>
  <link href="https://kalyan-zitiu.github.io/atom.xml" rel="self"/>
  
  <link href="https://kalyan-zitiu.github.io/"/>
  <updated>2022-10-09T04:30:10.542Z</updated>
  <id>https://kalyan-zitiu.github.io/</id>
  
  <author>
    <name>Kalyan</name>
    <email>3148862192@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Articles in English#2</title>
    <link href="https://kalyan-zitiu.github.io/2022/10/09/Englishwork#2/"/>
    <id>https://kalyan-zitiu.github.io/2022/10/09/Englishwork#2/</id>
    <published>2022-10-09T04:30:04.000Z</published>
    <updated>2022-10-09T04:30:10.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Do-we-Need-Never-give-up？"><a href="#Do-we-Need-Never-give-up？" class="headerlink" title="Do we Need Never give up？"></a>Do we Need Never give up？</h1><p>Quite a few people think that Never giving up is the attitude of life, But is this really the case? I encounter many citizens who use them as an excuse, though they stay on this path and make a great contribution. But practically, they cannot profit    anything. Not only wasting their time ,but also paying out their energy.</p><p>In our dailylife, we can find something which we want to pay more attention to it.But we need to contrast habits and work. This thing you love may only be what you need for a while. When enthusiasm subsides,you will find it not your love things. So,The reality is harsh, you must ensure you have some gifts in what you want to do.</p><p>Life is hard to avoid, you must try doing something again and again. Utill you seek you can stand on it firmly. It means that you need to relinquish something and pick something back. Fail is not lose face, when you hit a wall that you really cannot get over,you have to stop and look elsewhere.</p>]]></content>
    
    
    <summary type="html">Leisure articles about work and life</summary>
    
    
    
    <category term="杂谈" scheme="https://kalyan-zitiu.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="English" scheme="https://kalyan-zitiu.github.io/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络应用层</title>
    <link href="https://kalyan-zitiu.github.io/2022/10/08/%E5%BA%94%E7%94%A8%E5%B1%82/"/>
    <id>https://kalyan-zitiu.github.io/2022/10/08/%E5%BA%94%E7%94%A8%E5%B1%82/</id>
    <published>2022-10-08T14:20:04.000Z</published>
    <updated>2022-10-08T14:26:06.657Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li><p><strong>应用层协议：每个应用层协议都是为了解决一类应用问题，而解决问题需要通过位于不同主机的多个应用进程之间的通信和协同来完成，应用层的具体内容就是定义这些通信规则</strong></p></li><li><p>**应用层的具体内容就是规定应用进程在通讯时候所遵循的协议</p><ul><li><strong>客户/服务器（C/S，Client/Server）方式</strong></li><li>**对等（P2P，Peer to Peer）方式</li></ul></li></ul><h3 id="应用进程"><a href="#应用进程" class="headerlink" title="应用进程"></a>应用进程</h3><p>   <strong>为解决具体应用问题而彼此通信的进程</strong></p><hr><h2 id="应用进程的通讯方式"><a href="#应用进程的通讯方式" class="headerlink" title="应用进程的通讯方式"></a>应用进程的通讯方式</h2><h3 id="①客户-服务器（C-S-Client-Server）方式"><a href="#①客户-服务器（C-S-Client-Server）方式" class="headerlink" title="①客户/服务器（C/S, Client/Server）方式"></a><strong>①客户/服务器（C/S, Client/Server）方式</strong></h3><ul><li><strong>应用层的许多协议是基于C/S方式，例如，在移动互联网环境下，每个应用APP都是一个客户端</strong><ul><li><strong>客户(client)和服务器(server)是指通信中所涉及的2个应用进程</strong></li><li><strong>客户/服务器方式描述的是应用进程之间服务和被服务的关系</strong></li><li><strong>客户是服务请求方（主动请求服务，被服务</strong></li><li><strong>服务器是服务提供方（被动接受服务请求，提供服务）</strong></li></ul></li><li><strong>C/S方式可以是面向连接的，也可以是无连接的</strong></li><li><strong>面向连接时，C/S通信关系一旦建立，通信就是双向的，双方地位平等，都可发送和接收数据</strong></li></ul><h4 id="客户进程的特点"><a href="#客户进程的特点" class="headerlink" title="客户进程的特点"></a>客户进程的特点</h4><ul><li>在进行通信时临时成为客户，它也可以在本地进行其他的计算</li><li>用户计算机上运行，在打算通信时主动向远地服务器发起通信</li><li><strong>客户方必须知道服务器所在的主机的IP地址才能发出服务请求</strong></li><li>需要时可以与多个服务器进行通信</li></ul><h4 id="服务器进程的特点"><a href="#服务器进程的特点" class="headerlink" title="服务器进程的特点"></a>服务器进程的特点</h4><ul><li>专门用来提供某种服务的程序，可同时处理多个远地和本地客户的请求</li><li><strong>必须始终处于运行状态才有可能提供服务</strong></li><li>通信开始之前服务器进程不需要知道客户进程所在的IP地址，无论客户请求来自哪里，服务器进程被动等待服务请求的到来即可</li><li>通常是当系统启动时即自动调用并一直运行着。某些服务器程序也可以由用户或其他的进程在通信前启动</li><li>被动等待并接受来自多个客户的通信请求</li></ul><h3 id="②对等（P2P，Peer-to-Peer）方式"><a href="#②对等（P2P，Peer-to-Peer）方式" class="headerlink" title="②对等（P2P，Peer to Peer）方式"></a><strong>②对等（P2P，Peer to Peer）方式</strong></h3><ul><li>对等方式是指两个进程在通讯时并不区分服务的请求方和服务的提供方。<ul><li>只要两个主机都运行P2P软件，那么就可以进行平等，对等的通信。</li><li>如果权限允许的话，双方都可以下载彼此存储在硬盘中的共享文件。</li></ul></li><li>音频以及视频应用推动了P2P的对等通信方式的发展（BitTorrent）。</li><li>音频以及视频流量已经是占主要比。</li><li>P2P方式从本质上看仍然是使用了C/S方式，但强调的是通信过程中的对等，<strong>这时每一个P2P进程是客户的同时也是服务器</strong>。</li></ul><h2 id="服务器进程-工作方式"><a href="#服务器进程-工作方式" class="headerlink" title="服务器进程 工作方式"></a>服务器进程 工作方式</h2><ul><li>循环方式(iterative mode)<ul><li>一次只运行一个服务器</li><li>当有多个客户进程请求服务时,服务进程就会按照请求的先后顺序来依次做出响应**(阻塞方式)**</li><li>并发方式(concurrent mode)</li><li>可以同时运行多个服务器进程,</li><li>每个服务器进程都对某个特定的客户进程进行响应(非阻塞方式)</li></ul></li><li>无连接循环方式服务<ul><li>使用无连接的UDP服务进程通常都工作在循环方式,即一个服务器进程在同一时间只能向一个客户进程提供服务.(顺序服务)</li><li>服务器进程收到客户进程的请求后,会发送UDP用户数据报响应该客户</li><li>对其他客户进程发送的请求则暂时不予理睬,这些请求都在服务端的队列中排队等候服务进程的处理</li><li>当服务进程处理完一个请求时,会从队列中读取来自下一个客户进程的请求,然后继续处理 </li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/20210702104216597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="图1.1"></p><ul><li><strong>面向链接的并发方式服务</strong><ul><li>面向连接的<strong>TCP服务进程</strong>通常都在工作在并发服务方式,服务进程可在同一时间同时向多个客户进程提供服务(<strong>并发服务</strong>)</li><li>在TCP服务进程与多个客户进程之间必须建立多条TCP连接,每条TCP连接在其数据传送完毕后释放</li><li>一个TCP连接对应一个(熟知)服务端口</li><li>主服务进程在熟知端口等待客户进程发送请求,一旦接受到客户进程的请求,就会创建一个从属服务进程,并指明从属服务进程使用临时的套接字与该客户建立TCP连接,然后主服务进程会继续在熟知端口等待其他客户进程的请求.</li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/20210702104304442.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="域名系统"><a href="#域名系统" class="headerlink" title="域名系统"></a>域名系统</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p><strong>域名系统：</strong>是互联网使用的命名系统，用来便于人们使用的机器名字转换为IP地址<br>许多应用层软件进程使用域名系统DNS，但是计算机的用户只是间接而不是直接使用DNS。<br>互联网采取层次结构的命名树作为主机的名字，并使用分布式的域名系统DNS。DNS使大多数的名字放在本地分析，仅留下少量的解析需要互联网上通信。</p><h3 id="域名的解析过程"><a href="#域名的解析过程" class="headerlink" title="域名的解析过程"></a><strong>域名的解析过程</strong></h3><p>首先是把主机名字<strong>解析成为IP地址</strong>，然后应用进程会调用解析程序，并且<strong>成为DNS的一名客户</strong>，把待解析的域名放在DNS的请求报告中，<strong>以UDP用户数据报方式</strong>发给本地域名服务器，本地域名服务器在查找域名后，会<strong>把IP地址</strong>放在回答报文中<strong>返回</strong>，应用进程<strong>获得</strong>目的主机的<strong>IP地址</strong>后即<strong>可通信</strong>。</p><p><img src="https://img-blog.csdnimg.cn/2021070210481257.png" alt="在这里插入图片描述"></p><hr><h4 id="域名的递归查询"><a href="#域名的递归查询" class="headerlink" title="域名的递归查询"></a><strong>域名的递归查询</strong></h4><p><img src="https://img-blog.csdnimg.cn/20210702105147777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h4 id="域名的迭代查询"><a href="#域名的迭代查询" class="headerlink" title="域名的迭代查询"></a><strong>域名的迭代查询</strong></h4><p><img src="https://img-blog.csdnimg.cn/20210702105303958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="域名结构"><a href="#域名结构" class="headerlink" title="域名结构"></a>域名结构</h3><ul><li>互联网是采取层次结构的命名方法</li><li>任何一个连接在互联网的主机或路由器都有一个唯一的层次结构名字，即域名。</li><li>域时名字空间中可以被管理的划分，域还可以被划分成子域，而子域还能继续划分</li></ul><p><img src="https://img-blog.csdnimg.cn/20210702104833729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h2 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h2><h3 id="简单邮件传输协议SMTP—-邮件服务器之间传递邮件使用的协议"><a href="#简单邮件传输协议SMTP—-邮件服务器之间传递邮件使用的协议" class="headerlink" title="简单邮件传输协议SMTP—-邮件服务器之间传递邮件使用的协议"></a>简单邮件传输协议SMTP—-邮件服务器之间传递邮件使用的协议</h3><ul><li>最终交付(邮件访问)<br> +第三版邮局协议 POP3<ul><li>Internet邮件访问协议 IMAP</li><li>基于Web的电子邮件 Webmail（HTTP）</li><li><img src="https://img-blog.csdnimg.cn/20210702105700634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul></li></ul><h3 id="Webmail"><a href="#Webmail" class="headerlink" title="Webmail"></a>Webmail</h3><ul><li>提供电子邮件服务的IMAP和SMTP替代方案</li><li>使用Web作为界面，用户代理就是普通的浏览器</li><li>用户以及其远程邮件之间的通信通过HTTP进行</li></ul><h2 id="WWW"><a href="#WWW" class="headerlink" title="WWW"></a>WWW</h2><h3 id="HTTP服务器与客户端"><a href="#HTTP服务器与客户端" class="headerlink" title="HTTP服务器与客户端"></a>HTTP服务器与客户端</h3><ul><li><p>服务器</p><ul><li>Web页面（HTML文档）：包含多种对象或者连接</li><li>Web对象（包含：静态对象以及动态对象）：可以是HTML文档，视频文件，音频文件，图像文件以及脚本文件等</li><li>对象用URL（统一资源定位符）编址：协议类型：//主机名：端口//路径和文件名</li></ul></li><li><p>客户端</p><ul><li>发出请求，接收响应，解析HTML文档并显示</li><li>有些对象需要浏览器安装插件</li><li> <img src="https://img-blog.csdnimg.cn/20210702110058685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul></li></ul><h3 id="www协议"><a href="#www协议" class="headerlink" title="www协议"></a>www协议</h3><ul><li><img src="https://img-blog.csdnimg.cn/20210702110204885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><ul><li>超文本传输协议HTTP在传输层通常使用TCP协议，缺省使用TCP的80端口</li><li>HTTP为无状态协议：服务器端不保留之前请求的状态信息<ul><li>无状态协议：效率低，但简单</li><li>有状态协议：维护状态相对复杂，需要维护历史信息，在客户端或服务器出翔故障时，需要保持状态的一致性等。</li></ul></li></ul><h2 id="Web安全隐私：Cookie"><a href="#Web安全隐私：Cookie" class="headerlink" title="Web安全隐私：Cookie"></a>Web安全隐私：Cookie</h2><p>HTTP无状态协议，服务器用cookies保持用户状态</p><ul><li>HTTP在响应的首部行里面使用一个关键字Set-cookie：选择的cookie号具有唯一性</li><li>后继的HTTP请求中使用服务器响应分配的cookie</li><li>Cookie文件保存在用户的主机之中，内容是服务器返回的附加消息，由用户的主机的浏览器管理</li><li><img src="https://img-blog.csdnimg.cn/20210702111728805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2MTAxODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h2 id="流媒体"><a href="#流媒体" class="headerlink" title="流媒体"></a>流媒体</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><ul><li>流媒体概念<ul><li>连续媒体（音视频）经压缩编码，数据打包后，经过网络发送给接收方</li><li>接受方对数据进行重组，解码和播放</li></ul></li><li>流媒体的特性<ul><li>端到端时延约束</li><li>时序性约束：流媒体数据必须按照一定的顺序连续播放</li><li>具有一定程度的容错性：丢失部分数据包也可以完成基本功能</li></ul></li><li>流媒体面临的挑战<ul><li>网络特性（宽带有限，动态变化，延迟与抖动，丢失，异构性）</li><li>目标：流媒体服务质量要素（画质，启动延迟，平滑，交互性）</li></ul></li></ul><h3 id="流媒体动态自适应传输"><a href="#流媒体动态自适应传输" class="headerlink" title="流媒体动态自适应传输"></a>流媒体动态自适应传输</h3><ul><li>DASH<ul><li>动态自适应流媒体协议DASH，由MPEG组织制定的标准</li><li>类似协议：苹果HTTP Live Streaming；Adobe的HTTP Dynamic Streaming,微软的Microsoft Smooth Streaming</li></ul></li><li>基本思想<ul><li>完整视频被拆分为固定时长的视频片段，每段提供不同码率</li><li>视频片段与其对应的元文件（URL）一同存放于DASH服务器</li><li>客户端基于网络条件，缓冲大小等，对每个视频片段，自适应选择合适的视频码率来下载</li></ul></li></ul>]]></content>
    
    
    <summary type="html">计算机网络应用层基础知识</summary>
    
    
    
    <category term="计算机网络" scheme="https://kalyan-zitiu.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="计算机网络" scheme="https://kalyan-zitiu.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Linux实用命令</title>
    <link href="https://kalyan-zitiu.github.io/2022/10/08/%E5%AE%9E%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>https://kalyan-zitiu.github.io/2022/10/08/%E5%AE%9E%E7%94%A8%E6%8C%87%E4%BB%A4/</id>
    <published>2022-10-08T14:20:04.000Z</published>
    <updated>2022-10-08T14:22:15.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实用指令"><a href="#实用指令" class="headerlink" title="实用指令"></a>实用指令</h1><h2 id="5-1运行级别"><a href="#5-1运行级别" class="headerlink" title="==5.1运行级别=="></a>==<strong>5.1运行级别</strong>==</h2><h3 id="基本"><a href="#基本" class="headerlink" title="基本"></a><strong>基本</strong></h3><table><thead><tr><th align="left">0</th><th>关机</th><th></th></tr></thead><tbody><tr><td align="left">1</td><td>单用户（找回丢失密码）</td><td></td></tr><tr><td align="left">2</td><td>多用户状态没有网络服务</td><td></td></tr><tr><td align="left">3</td><td>系统未使用保留给用户</td><td>multi-user.target</td></tr><tr><td align="left">4</td><td>图形界面</td><td></td></tr><tr><td align="left">5</td><td>系统重启</td><td>graphical.target</td></tr></tbody></table><p><strong>==Note==</strong><br><strong>常用系统级别是3和5，也可以切换运行级别和指定默认运行级别</strong>。</p><h3 id="切换运行级别"><a href="#切换运行级别" class="headerlink" title="切换运行级别"></a><strong>切换运行级别</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>init 运行级别<strong>（init 3）</strong></td><td>将运行级别切换为3（多用户状态有网络服务）</td></tr></tbody></table><p><strong>==Note==</strong><br><strong>init 只能用来切换运行级别。下次开机后系统自动回到运行级别5。</strong></p><h3 id="设置默认运行级别"><a href="#设置默认运行级别" class="headerlink" title="设置默认运行级别"></a><strong>设置默认运行级别</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>systemctl get-default</td><td>查看当前默认运行级别</td></tr><tr><td>systemctl set-default multi-user.target</td><td>设置默认运行级别为3</td></tr><tr><td>systemctl set -default graphical.target</td><td>设置默认运行级别为5</td></tr></tbody></table><p><strong>==Note==</strong><br>-<strong>此方式永久性的修改了默认运行级别。每次开机后系统都会运行该默认运行级别。</strong></p><h3 id="开机流程说明"><a href="#开机流程说明" class="headerlink" title="开机流程说明"></a><strong>开机流程说明</strong></h3><p><img src="https://img-blog.csdnimg.cn/326400f8c502421a9482254a802e0787.png" alt="img"></p><h2 id="帮助指令"><a href="#帮助指令" class="headerlink" title="==帮助指令=="></a>==<strong>帮助指令</strong>==</h2><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>man 命令或配置文件</td><td>获得命令或配置文件的帮助信息</td></tr><tr><td>help 命令</td><td>获得shell内置命令的帮助信息</td></tr></tbody></table><h2 id="文件目录类"><a href="#文件目录类" class="headerlink" title="==文件目录类=="></a>==<strong>文件目录类</strong>==</h2><h3 id="pwd指令"><a href="#pwd指令" class="headerlink" title="pwd指令"></a><strong>pwd指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>pwd</td><td>显示当前工作目录的绝对途径</td></tr></tbody></table><h3 id="ls指令"><a href="#ls指令" class="headerlink" title="ls指令"></a><strong>ls指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>ls 目录或文件</td><td>显示当前目录下所有的文件和目录（不包括隐藏的）</td></tr><tr><td>ls -a 目录或文件</td><td>显示当前目录下所有的文件和目录（包括隐藏的）</td></tr><tr><td>ls -l 目录或文件 或 ll 目录或文件</td><td>以列表的方式显示信息</td></tr><tr><td>ls -lh 目录或文件</td><td>以列表的方式人性化地显示信息</td></tr></tbody></table><h3 id="cd指令"><a href="#cd指令" class="headerlink" title="cd指令"></a><strong>cd指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>cd</td><td>切换到当前用户的家目录</td></tr><tr><td>cd ~</td><td>切换到当前用户的家目录</td></tr><tr><td>cd .</td><td>保持当前目录不变</td></tr><tr><td>cd ..</td><td>切换到上级目录</td></tr><tr><td>cd -</td><td>可以在最近两次工作目录之间来回切换</td></tr></tbody></table><h3 id="mkdir指令"><a href="#mkdir指令" class="headerlink" title="mkdir指令"></a><strong>mkdir指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>mkdir 要创建的单级目录</td><td>创建单级目录</td></tr><tr><td>mkdir -p 要创建的多级目录</td><td>创建多级目录</td></tr></tbody></table><h3 id="rmdir指令"><a href="#rmdir指令" class="headerlink" title="rmdir指令"></a><strong>rmdir指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>rmdir 要删除的空目录</td><td>删除空目录</td></tr><tr><td>rm -rf 要删除的非空目录</td><td>删除非空目录</td></tr></tbody></table><h3 id="touch指令"><a href="#touch指令" class="headerlink" title="touch指令"></a><strong>touch指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>touch 文件名称</td><td>创建一个空文件</td></tr></tbody></table><h3 id="cp指令"><a href="#cp指令" class="headerlink" title="cp指令"></a><strong>cp指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th><th>Remake</th></tr></thead><tbody><tr><td>cp source dest</td><td>将source拷贝到dest</td><td></td></tr><tr><td>cp -r source dest</td><td>将source递归拷贝到dest</td><td></td></tr><tr><td>\cp source dest</td><td>将source拷贝到dest(强制覆盖不提示)</td><td></td></tr></tbody></table><h3 id="rm指令"><a href="#rm指令" class="headerlink" title="rm指令"></a><strong>rm指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>rm 要删除的文件或目录</td><td>移除文件或目录</td></tr><tr><td>rm -r 要删除的目录</td><td>递归删除目录</td></tr><tr><td>rm -f 要删除的文件或目录</td><td>强制删除目录不提示</td></tr></tbody></table><h3 id="mv指令"><a href="#mv指令" class="headerlink" title="mv指令"></a><strong>mv指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>mv oldFileName newFileName</td><td>重命名（两者在同一目录下面）</td></tr><tr><td>mv /temp/movefile /targetFolder</td><td>移动文件</td></tr></tbody></table><h3 id="cat指令"><a href="#cat指令" class="headerlink" title="cat指令"></a><strong>cat指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>cat 要查看的文件</td><td>查看文件的内容</td></tr><tr><td>cat -n 要查看的文件</td><td>查看文件的内容并显示行号</td></tr><tr><td>cat -n 要查看的文件  more</td><td>将cat查看的内容交给more指令来处理（为了浏览方便）</td></tr></tbody></table><h3 id="more指令"><a href="#more指令" class="headerlink" title="more指令"></a><strong>more指令</strong></h3><p><img src="https://img-blog.csdnimg.cn/fb32e188764542ebb25549929c4a24ff.png" alt="img"><br>|Order|illustrate|<br>|—–|—–|<br>|more 要查看的文件|查看文件的内容（浏览更方便）|</p><h3 id="less指令"><a href="#less指令" class="headerlink" title="less指令"></a><strong>less指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>less 要查看的文件</td><td>查看文件的内容</td></tr></tbody></table><p><strong>==Note==</strong><br><strong>less 指令用来分屏查看文件内容，它的功能与more 指令类似，但是比 more 指令更加强大，支持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。</strong></p><p><img src="https://img-blog.csdnimg.cn/5a3f4976cdc74d8e966916588413378c.png" alt="img"></p><h3 id="echo指令"><a href="#echo指令" class="headerlink" title="echo指令"></a><strong>echo指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>echo $PATH</td><td>输出当前PATH环境变量</td></tr><tr><td>echo $HOSTNAME</td><td>输出当前HOSTNAME环境变量（主机名）</td></tr><tr><td>echo ‘hello world’</td><td>输出hello world</td></tr></tbody></table><h3 id="head指令"><a href="#head指令" class="headerlink" title="head指令"></a><strong>head指令</strong></h3><p>==head指令用于查看文件开头的部分内容（默认情况下显示前10行）。==<br>|Order|illustrate|<br>|—–|—–|<br>|head 文件|查看文件开头的前10行内容|<br>|head -n 5 文件|查看文件开头的前5行内容|</p><h3 id="tail指令"><a href="#tail指令" class="headerlink" title="tail指令"></a><strong>tail指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>tail 文件</td><td>查看文件尾部的后10行内容</td></tr><tr><td>tail -n 5 文件</td><td>查看文件尾部的后5行内容</td></tr><tr><td>tail -f 文件</td><td>实时追踪该文档的所有更新</td></tr></tbody></table><h3 id="gt-指令和-gt-gt-指令"><a href="#gt-指令和-gt-gt-指令" class="headerlink" title="&gt;指令和&gt;&gt;指令"></a><strong>&gt;指令和&gt;&gt;指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>ls -l &gt; 文件</td><td>列表的内容写入（覆盖）到文件</td></tr><tr><td>ls -l &gt;&gt; 文件</td><td>列表的内容追加到文件</td></tr><tr><td>cat 文件1 &gt; 文件2</td><td>文件1的内容覆盖到文件2</td></tr><tr><td>echo ‘hello’  &gt;&gt; 文件</td><td>hello追加到文件中</td></tr></tbody></table><h3 id="In指令"><a href="#In指令" class="headerlink" title="In指令"></a><strong>In指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>ln -s 原文件或目录 软链接名</td><td>给原文件创建一个软链接(这样软链接就指向了原文件或目录)</td></tr></tbody></table><p><strong>==Note==</strong><br><strong>当工作目录为软链接所在目录，使用pwd查看的目录仍然是软链接所在目录而不是原目录。</strong></p><h3 id="history指令"><a href="#history指令" class="headerlink" title="history指令"></a><strong>history指令</strong></h3><p>==history指令用于查看已经执行过的历史命令。==</p><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>histrory</td><td>查看已经执行过的历史命令</td></tr><tr><td>histrory n</td><td>查看最近执行过的n条历史命令</td></tr><tr><td>!n</td><td>执行历史编号为n的历史命令</td></tr></tbody></table><h2 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a>时间日期类</h2><h3 id="date指令"><a href="#date指令" class="headerlink" title="date指令"></a>date指令</h3><p>date指令用于显示当前日期<br>|Order|illustrate|<br>|—–|—–|<br>|date|显示当前时间|<br>|date +%Y|显示当前年份|<br>|date +%m|显示当前月份|<br>|date +%d|显示当前是哪一天|<br>|date “+%Y-%m-%d %H:%M:%S”|显示年月日时分秒|</p><h3 id="设置时间"><a href="#设置时间" class="headerlink" title="设置时间"></a>设置时间</h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>date -s 字符串时间</td><td>设置系统当前时间</td></tr></tbody></table><h3 id="cal指令"><a href="#cal指令" class="headerlink" title="cal指令"></a>cal指令</h3><p>cal指令用于显示日历<br>|Order|illustrate|<br>|—–|—–|<br>|cal|显示本月日历|<br>|cal 年份|显示本年所有月日历|</p><h2 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="==搜索查找类=="></a>==<strong>搜索查找类</strong>==</h2><h3 id="find指令"><a href="#find指令" class="headerlink" title="find指令"></a><strong>find指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>find 指定目录 -name 要查找的文件或目录</td><td>按照指定目录查询文件或目录</td></tr><tr><td>find 指定目录 -user 用户名</td><td>按照指定目录查找指定用户名的所有文件或目录</td></tr><tr><td>find 指定目录 -size 文件大小</td><td>按照指定目录查找满足文件大小的所有文件或目录</td></tr><tr><td><strong>==Note==</strong></td><td></td></tr><tr><td><strong>1.文件大小：大于+，小于-，等于=</strong></td><td></td></tr><tr><td><strong>2.find指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。</strong></td><td></td></tr><tr><td><strong>find指令也可以不指定目录进行查找。</strong></td><td></td></tr></tbody></table><h3 id="locate指令"><a href="#locate指令" class="headerlink" title="locate指令"></a><strong>locate指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>locate 要查找的文件或目录</td><td>快速查找文件或目录</td></tr><tr><td><strong>==Note==</strong></td><td></td></tr><tr><td><strong>1.locate指令无需遍历整个文件系统，locate 指令利用事先建立的系统中所有文件名称及路径的         locate数据库实现快速定位给定的文件路径。</strong></td><td></td></tr></tbody></table><p><strong>2.为了保证查询结果的准确度，管理员必须定期更新locate时刻。</strong></p><p><strong>3.由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locatc数据库。</strong></p><h3 id="which指令"><a href="#which指令" class="headerlink" title="which指令"></a><strong>which指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>which 要查找的命令</td><td>查找指令的存放路径</td></tr></tbody></table><p><strong>==Note==</strong><br>which指令用于查找指令的存放路径。</p><h3 id="管道符“-”和grep指令"><a href="#管道符“-”和grep指令" class="headerlink" title="管道符“|”和grep指令"></a><strong>管道符“|”和grep指令</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>grep 查找内容 源文件</td><td>将源文件中的查找内容输出</td></tr><tr><td>grep -n 查找内容 源文件</td><td>将源文件中的查找内容输出，并显示行号</td></tr><tr><td>grep -i 查找内容 源文件</td><td>将源文件中的查找内容输出（不区分大小写）</td></tr></tbody></table><p><strong>==Note==</strong><br>1.管道符“|”表示将前一个命令的处理结果输出传递给后面的命令处理。<br>    grep指令用于过滤查找，可配合管道符“|”使用。</p><p>==<strong>Case study</strong><br><strong>请在 hello.txt文件中，查找”yes”所在行，并且显示行号。<br>法一：cat hello.txt | grep -n “yes”<br>法二：grep -n “yes” hello.txt</strong></p><h2 id="压缩和解压"><a href="#压缩和解压" class="headerlink" title="压缩和解压"></a>压缩和解压</h2><h3 id="gzip-gunzio指令"><a href="#gzip-gunzio指令" class="headerlink" title="gzip/gunzio指令"></a>gzip/gunzio指令</h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>gzip 文件</td><td>压缩文件（只能将文件压缩为*.gz文件）</td></tr><tr><td>gunzip 文件.gz</td><td>解压缩文件</td></tr></tbody></table><h3 id="zip-unzip指令"><a href="#zip-unzip指令" class="headerlink" title="==zip/unzip指令=="></a>==<strong>zip/unzip指令</strong>==</h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>zip XXX.zip 要压缩的文件</td><td>压缩文件</td></tr><tr><td>zip -r XXX.zip 要压缩的目录</td><td>压缩目录（递归压缩）</td></tr><tr><td>unzip XXX.zip</td><td>将压缩包解压到当前目录下</td></tr><tr><td>unzip -d 目标目录 XXX.zip</td><td>将压缩包解压到指定目录下</td></tr></tbody></table><h3 id="tar指令"><a href="#tar指令" class="headerlink" title="==tar指令=="></a>==<strong>tar指令</strong>==</h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>tar-z</td><td>压缩/解压缩</td></tr><tr><td>tar-c</td><td>产生tar打包文件</td></tr><tr><td>tar-v</td><td>显示详细信息</td></tr><tr><td>tar-f</td><td>指定压缩后的文件名</td></tr><tr><td>tar-x</td><td>解包.tar文件</td></tr><tr><td>tar-C</td><td>解压缩到指定目录（解压缩的目录必须存在）</td></tr><tr><td>tar -zcvf 打包文件.tar.gz 被打包的文件</td><td>打包压缩文件</td></tr><tr><td>tar -zxvf 打包文件.tar.gz</td><td>解包解压缩文件至当前目录下</td></tr><tr><td>tar -zxvf 打包文件.tar.gz -C 目标目录</td><td>解包解压缩文件至当前指定目录下</td></tr></tbody></table><h2 id="Linux组基本介绍"><a href="#Linux组基本介绍" class="headerlink" title="Linux组基本介绍"></a><strong>Linux组基本介绍</strong></h2><h3 id="Linux组基本介绍-1"><a href="#Linux组基本介绍-1" class="headerlink" title="Linux组基本介绍**"></a>Linux组基本介绍**</h3><p>在linux中的每个用户必须属于一个组，且可以改变每个用户所在的组。<br>在linux中的每个文件拥有以下概念：<br>1.所有者2.所在组3.其它组</p><h3 id="文件-目录所有者"><a href="#文件-目录所有者" class="headerlink" title="文件/目录所有者"></a><strong>文件/目录所有者</strong></h3><p><em><strong>一般为文件/目录的创建者，即谁创建文件/目录，谁就是该文件/目录的所有者。</strong></em></p><h3 id="查看文件-目录的所有者"><a href="#查看文件-目录的所有者" class="headerlink" title="查看文件/目录的所有者"></a><strong>查看文件/目录的所有者</strong></h3><p>ls -alh</p><p><img src="https://img-blog.csdnimg.cn/e36e9c31bcb248cda9ecc05d69c2440b.png" alt="img"></p><h3 id="修改文件-目录的所有者"><a href="#修改文件-目录的所有者" class="headerlink" title="修改文件/目录的所有者"></a><strong>修改文件/目录的所有者</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>chown 所有者 文件/目录</td><td>修改文件/目录的所有者</td></tr><tr><td>chown -R 所有者 目录</td><td>递归修改目录及目录内容的所有者</td></tr><tr><td>chown 所有者:所在组 文件/目录</td><td>修改文件/目录的所有者和所在组</td></tr></tbody></table><h3 id="文件-目录所在组"><a href="#文件-目录所在组" class="headerlink" title="文件/目录所在组"></a><strong>文件/目录所在组</strong></h3><p><strong>当某个用户创建了一个文件后，这个文件的所在组就是该用户所在的组(默认)。</strong></p><h3 id="查看文件-目录的所在组"><a href="#查看文件-目录的所在组" class="headerlink" title="查看文件/目录的所在组"></a><strong>查看文件/目录的所在组</strong></h3><p>ls -alh</p><p><img src="https://img-blog.csdnimg.cn/966d4fe8a879494297ee9578ce9a97be.png" alt="img"></p><h3 id="修改文件-目录的所在组"><a href="#修改文件-目录的所在组" class="headerlink" title="修改文件/目录的所在组"></a><strong>修改文件/目录的所在组</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>chgrp 所在组 文件/目录</td><td>修改文件/目录的所在组</td></tr><tr><td>chgrp -R 所在组 目录</td><td>递归修改目录及目录内容的所在组</td></tr></tbody></table><h3 id="其它组"><a href="#其它组" class="headerlink" title="其它组"></a><strong>其它组</strong></h3><p><strong>除文件的所有者和所在组的用户外，系统的其它用户都属于文件的其它组。</strong></p><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a><strong>权限管理</strong></h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a><strong>基本介绍</strong></h3><p><img src="https://img-blog.csdnimg.cn/1055e2e25bcd4f32a559061862242ae5.png" alt="img"></p><p><strong>0-9位说明</strong></p><p>1.第0位确定文件类型（-、l、d、c、b）<br>        -表示普通文件<br>        l是链接，相当于windows的快捷方式<br>        d是目录，相当于windows的文件夹<br>        c是字符设备文件，例如鼠标，键盘<br>        b是块设备，例如硬盘<br>2.第1-3位确定该文件所有者拥有的权限。<br>3.第4-6位确定与该文件所有者同一组的用户拥有的权限。<br>4.第7-9位确定不与该文件所有者同一组的其他用户拥有的权限。</p><h3 id="rwx作用到文件"><a href="#rwx作用到文件" class="headerlink" title="rwx作用到文件"></a><strong>rwx作用到文件</strong></h3><pre><code> r表示可读（read）：可以查看文件中的内容 w表示可写（write）：可以修改文件中的内容，但是不一定可以删除该文件（因为删除一个      文件的前提是对该文件所在目录有写权限，才能删除该文件） x表示可执行（execute）：可以执行该文件</code></pre><h3 id="rwx作用到目录"><a href="#rwx作用到目录" class="headerlink" title="rwx作用到目录"></a><strong>rwx作用到目录</strong></h3><p><strong>1.r表示可读（read）：可以查看目录中的内容（ls查看）</strong></p><p><strong>2.w表示可写（write）：可以创建、删除目录中的内容，重命名目录</strong></p><p><strong>3.x表示可执行（execute）：可以进入该目录（cd进入）</strong></p><h3 id="ls-l扩展"><a href="#ls-l扩展" class="headerlink" title="ls -l扩展"></a><strong>ls -l扩展</strong></h3><p><img src="https://img-blog.csdnimg.cn/1055e2e25bcd4f32a559061862242ae5.png" alt="img"></p><p>ls -l可显示目录下文件的详细信息,从左往右依次是：<br>     文件类型<br>     权限<br>     硬链接数（对于文件来说）或子目录数（对于目录来说，包括隐藏目录）<br>     用户<br>     组<br>     文件/文件夹大小（字节）<br>     最后修改日期<br>     文件名</p><h3 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a><strong>chmod</strong></h3><p><strong>chmod指令用于修改文件或者目录的权限。</strong></p><p><strong>+、-、=变更权限</strong><br>|Order|illustrate|<br>|—–|—–|<br>|chmod u=rwx,g=rx,o=x 文件/目录|给文件/目录的所有者读写执行的权限，所在组读执行的权限其它组执行的权限    |<br>|chmod o+x 文件/目录|给文件/目录的其它组增加执行的权限|<br>|chmod a-x 文件/目录|给文件/目录的所有人除去执行的权限|</p><table><thead><tr><th>Remake</th><th>—–</th></tr></thead><tbody><tr><td>u：</td><td>所有者</td></tr><tr><td>g：</td><td>所在组</td></tr><tr><td>o：</td><td>其它组</td></tr><tr><td>a：</td><td>所有人</td></tr><tr><td>=：</td><td>赋予</td></tr><tr><td>+：</td><td>增加</td></tr><tr><td>-：</td><td>除去</td></tr></tbody></table><h3 id="数字变更权限"><a href="#数字变更权限" class="headerlink" title="数字变更权限"></a><strong>数字变更权限</strong></h3><table><thead><tr><th>Order</th><th>illustrate</th></tr></thead><tbody><tr><td>chmod 751 文件/目录</td><td>给文件/目录的所有者读写执行的权限，所在组读执行的权限，其它组执行的权限</td></tr></tbody></table><h2 id="定时任务调度"><a href="#定时任务调度" class="headerlink" title="定时任务调度"></a>定时任务调度</h2><h3 id="crond任务调度"><a href="#crond任务调度" class="headerlink" title="crond任务调度"></a>crond任务调度</h3><p>1.任务调度：系统在某个时间执行的特定命令或者程序。<br>2.任务调度分类：<br>（1）.系统工作：有些重要的工作必须周而复始的执行<br>（2）.个别用户工作：个别用户可能希望执行某些程序</p><p><img src="https://img-blog.csdnimg.cn/b8afa5a9321540b9a81ab9062238d683.png" alt="img"></p>]]></content>
    
    
    <summary type="html">Linux</summary>
    
    
    
    <category term="knowledge" scheme="https://kalyan-zitiu.github.io/categories/knowledge/"/>
    
    
    <category term="Linux" scheme="https://kalyan-zitiu.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Articles in English#1</title>
    <link href="https://kalyan-zitiu.github.io/2022/10/08/Englishwork#1/"/>
    <id>https://kalyan-zitiu.github.io/2022/10/08/Englishwork#1/</id>
    <published>2022-10-08T07:11:04.000Z</published>
    <updated>2022-10-08T14:17:59.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How-to-balance-work-and-leisure"><a href="#How-to-balance-work-and-leisure" class="headerlink" title="How to balance work and leisure"></a>How to balance work and leisure</h1><p>Currently, quite a few citizens will choose to take their hearts into work and learning because they are increasingly competitive in society. As a consequence, more people will make themselves more knowledgeable. It can enrich the quality of life.</p><p>But sometimes, you should get a good balance of work and leisure. It can make your life more comfortable and efficient. Somebody thinks it better work time less than 6 hours. And then the brain enters a state of exhaustion.</p><p>But how do you kill the rest of the time? You can do the best sports you like, or read a book quietly with soothing music. In addition, you can raise a pet to accompany you. In a word, doing something that can make you happy. Someone found a very novel method which calls the Pomodoro technique. It can improve your focus during one working time.</p><p>Hold the view that the best method to balance work and leisure. It depends on your mind. Somebody will consider the work is regarded as a pleasure. So they tend to enjoy it. The most important is what attitude you keep. Suppose you maintain an active mind. You will have inexhaustible power.</p>]]></content>
    
    
    <summary type="html">Leisure articles about work and life</summary>
    
    
    
    <category term="杂谈" scheme="https://kalyan-zitiu.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
    <category term="English" scheme="https://kalyan-zitiu.github.io/tags/English/"/>
    
  </entry>
  
</feed>
